---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import BlogCard from "../components/BlogCard.astro";
import type { CollectionEntry } from "astro:content";

interface Props {
  pageTitle?: string;
  description?: string;
  image?: string;
  collection: "blog" | "experiments" | "games";
}

const {
  // pageTitle = SITE_TITLE,
  // description = SITE_DESCRIPTION,
  // image,
  description,
  collection,
} = Astro.props;

const posts = (await getCollection(collection)).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const title = {
  blog: "Blog posts",
  experiments: "Experiments",
  games: "Games",
}[collection];
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="">
    <Header />
    <main class="max-w-4xl mx-auto px-4 py-8">
      <h1 class="text-3xl font-bold text-center mb-10 text-gray-800 dark:text-gray-100">
        {title}
      </h1>
      {
        description && (
          <p class="text-center mb-8 text-gray-600 dark:text-gray-300">
            {description}
          </p>
        )
      }
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {
          posts.map((post, index) => (
            <BlogCard
              url={`/${collection}/${post.id}`}
              title={post.data.title}
              pubDate={post.data.pubDate}
              description={post.data.description}
              tags={post.data.tags}
              isFeature={index === 0}
            />
          ))
        }
      </div>
    </main>
    <Footer />
  </body>
</html>
