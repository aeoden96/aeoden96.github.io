---
interface Achievement {
  text: string;
}

interface TechItem {
  name: string;
}

export interface Props {
  title: string;
  duration: string;
  role: string;
  description: string;
  achievements: Achievement[];
  techStack: TechItem[];
}

const { title, duration, role, description, achievements, techStack } =
  Astro.props;
---

<div class="project pl-6">
  <h3 class="text-2xl font-semibold text-white mb-2">
    {title}
  </h3>
  <div class="mb-4 flex gap-2 flex-wrap">
    <span class="bg-gray-800 text-gray-300 px-3 py-1 rounded-full text-sm"
      >{duration}</span
    >
    <span class="bg-gray-800 text-gray-300 px-3 py-1 rounded-full text-sm"
      >{role}</span
    >
  </div>
  <p class="text-gray-300 max-w-3xl mb-4">
    {description}
  </p>
  <div class="mb-4">
    <h4 class="text-gray-400 text-sm uppercase mb-2">Achievements</h4>
    <ul class="text-gray-300 space-y-1">
      {achievements.map((achievement) => <li>â€¢ {achievement.text}</li>)}
    </ul>
  </div>
  <div>
    <h4 class="text-gray-400 text-sm uppercase mb-2">Tech Stack</h4>
    <div class="flex flex-wrap gap-2">
      {
        techStack.map((tech) => (
          <span class="bg-gray-800 text-gray-300 px-2 py-1 text-sm">
            {tech.name}
          </span>
        ))
      }
    </div>
  </div>
</div>

<style>
  .project {
    position: relative;
  }

  .project::before {
    content: "";
    position: absolute;
    left: -20px;
    top: 0;
    bottom: 0;
    width: 1px;
    background: linear-gradient(
      to bottom,
      rgba(107, 114, 128, 0),
      rgba(107, 114, 128, 0.5) 20%,
      rgba(107, 114, 128, 0.5) 80%,
      rgba(107, 114, 128, 0)
    );
  }
</style>

