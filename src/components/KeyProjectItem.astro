---
import { Image } from "astro:assets";

export interface Props {
  title: string;
  description: string;
  industryTags: string[];
  claims: string[];
  duration: string;
  techStack: string[];
  role?: string;
  bannerImage?: string;
}

const {
  title,
  description,
  industryTags,
  claims,
  duration,
  techStack,
  role = "Frontend Developer",
  bannerImage,
} = Astro.props;
---

<div
  class:list={[
    "key-project-item",
    "rounded-lg relative bg-[#f0f0f0] border border-[#9c9c9c79] dark:bg-[#1e1e1e4d] dark:border-[#2d3748] overflow-hidden group",
  ]}
>
  {
    bannerImage && (
      <div class="banner-image w-full h-32 overflow-hidden">
        <Image
          src={bannerImage}
          alt={`${title} project banner`}
          class="w-full h-full object-cover scroll-image"
          width={1000}
          height={600}
          loading="eager"
        />
      </div>
    )
  }

  <div class="p-4">
    <div class="flex justify-between items-center">
      <h3 class="font-semibold text-base">{title}</h3>
      <div class="project-meta text-right">
        <div class="duration text-gray-500 text-xs">
          <span class="font-medium">{duration}</span>
        </div>
        {role && <div class="role text-gray-600 text-xs">{role}</div>}
      </div>
    </div>

    <div class="industry-tags mt-2">
      {
        industryTags.map((tag) => (
          <span class="inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded mr-2 mb-2">
            {tag}
          </span>
        ))
      }
    </div>

    <div
      class="hidden-container absolute overflow-y-auto top-full left-0 w-full h-full items-start flex flex-col justify-start z-50 group-hover:top-0 transition-all duration-300 bg-black/60 backdrop-blur-md p-4 delay-200"
    >
      <div class="description text-sm mt-3 text-gray-200 max-w-2xl">
        <p>{description}</p>
      </div>

      <div class="claims mt-3 bg-green-50 p-2 rounded-md">
        <ul class="space-y-1">
          {
            claims.map((claim) => (
              <li class="flex items-start text-xs">
                <span class="text-green-600 mr-2 mt-0.5">â€¢</span>
                <span class="text-green-700 font-medium">{claim}</span>
              </li>
            ))
          }
        </ul>
      </div>

      <div class="tech-stack mt-3">
        <div>
          {
            techStack.map((tech) => (
              <span class="inline-block bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded mr-2 mb-2">
                {tech}
              </span>
            ))
          }
        </div>
      </div>
    </div>
  </div>

  <style>
    .scroll-image {
      animation: scroll-watcher-island-3 1s linear;
      animation-timeline: scroll();
    }

    @keyframes scroll-watcher-island-3 {
      to {
        transform: translateY(50px);
      }
    }

    :global(.dark) .description p {
      color: #e2e8f0;
    }

    :global(.dark) .claims {
      background-color: rgba(20, 83, 45, 0.2);
    }
  </style>
</div>
